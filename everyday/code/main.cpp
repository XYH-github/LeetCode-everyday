#include "Print.h"


//#include "21_8_28-sum_for_onedimenarray.cpp"
//#include "21_8_29-sum_for_oddlength_array.cpp"
//#include "21_9_2-linedlist_get_reciprocal.cpp"
//#include "21_9_5-rank7_gene_rank10.cpp"
//#include "21_9_30-area_for_retang.cpp"
//#include "21_8_30-selete_num_by_weight.cpp"
//#include "21_10_2-dec2tohex.cpp"
//#include "21_10_3-fraction2todec.cpp"
//#include "21_10_10-sumfor_1234.cpp"
//#include "21_10_9-dataflow_to_array.cpp"
//#include "21_10_8-get_repeat_form_dna.cpp"
//#include "21_10_11-num_to_english_format.cpp"
//#include "21_10_30-single-number.cpp"
//#include "21_11_3-rainwater-connection.cpp"
//#include "21_11_8-game-for-guest-digital.cpp"
//#include "21_11_7-sum-for-range.cpp"
//#include "21_11_6-missing-num.cpp"
//#include "21_11_5-longest-arithmetic-sunsequence.cpp"
//#include "21_11_4-vaild-perfect-square.cpp"
//#include "21_11_17-maximum-product-of-word-lengths.cpp"
//#include "21_11_16-perfect-rectangle.cpp"
//#include "21_11_19-integer-replacement.cpp"
//#include "21_11_22-bulb-switcher.cpp"
//#include "21_11_13-detect-capital.cpp"
//#include "21_11_12-guess-number-high-or-lower-ii.cpp"
//#include "21_11_11-k-inverse-pairs-array.cpp"
//#include "21_11_10-teemo-attacking.cpp"
//#include "21_11_23-buddy-strings.cpp"
//#include "21_10_29-self-crossing.cpp"
//#include "21_11_25-pig-die.cpp"
//#include "21_11_29-k-th-smallest-prime-fraction.cpp"
//#include "21_12_6-truncate-sentence.cpp"
//#include "21_12_5-super-pow.cpp"
//#include "21_12_7-coloring-a-border.cpp"
//#include "21_12_4-ransom-note.cpp"
//#include "21_12_3-maximize-sum-of-array-after-k-negations.cpp"
//#include "21_12_8-maximum-sum-of-3-non-overlapping-subarrays.cpp"
//#include "21_12_2-relative-ranks.cpp"
//#include "21_12_1-consecutive-characters.cpp"
//#include "21_12_9-valid-tic-tac-toe-state.cpp"
//#include "21_11_30-nth-digit.cpp"
//#include "21_11_29-hebing-paixulianbiao.cpp"
//#include "21_11_28-find-all-anagrams-in-a-string.cpp"
//#include "21_12_19-find-the-town-judeg.cpp"
//#include "21_12_21-day-of-the-year.cpp"
//#include "22_1_1-convert-1d-array-into-2d-array.cpp"
//#include "21_12_20-heaters.cpp"
//#include "22_1_2-elimination-game.cpp"
//#include "22_1_7-maximum-nesting-depth-of-the-parentheses.cpp"
//#include "22_1_9-slowest-key.cpp"
//#include "22_1_10-additive-number.cpp"
//#include "22_1_11-escape-a-large-maze.cpp"
//#include "22_1_15-calculate-money-in-leetcode-bank.cpp"
//#include "22_1_16-linked-list-random-node.cpp"
//#include "22_1_18-minimum-time-difference.cpp"
//#include "22_1_19-contains-duplicate-ii.cpp"
//#include "22_1_17-count-vowels-permutation.cpp"
//#include "22_1_8-gray-code.cpp"
//#include "22_1_4-cat-and-mouse.cpp"
//#include "22_1_20-stone-game-ix.cpp"
//#include "22_1_26-detect-squares.cpp"
//#include "22_1_25-count-of-matches-in-tournament.cpp"
//#include "22_1_24-second-minimum-time-to-reach-destination.cpp"
//#include "22_1_27-number-of-valid-words-in-a-sentence.cpp"
//#include "22_1_28-the-number-of-weak-characters-in-the-game.cpp"
//#include "22_1_30-uncommon-words-from-two-sentences.cpp"
//#include "22_1_23-stock-price-fluctuation.cpp"
//#include "22_1_29-map-of-highest-peak.cpp"
//#include "22_2_2-reverse-prefix-of-word.cpp"
//#include "22_2_1-zui-chang-de-mei-hao-zi-zi-fu-chuan-by-l-4l1t.cpp"
//#include "22_2_1-longest-substring-with-at-least-k-repeating-characters.cpp"
//#include "22_2_3-find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k.cpp"
//#include "22_2_4-number-of-rectangles-that-can-form-the-largest-square.cpp"
//#include "22_2_5-path-with-maximum-gold.cpp"
//#include "22_2_6-sum-of-unique-elements.cpp"
//#include "22_2_7-longest-happy-string.cpp"
//#include "22_2_8-grid-illumination.cpp"
//#include "22_2_9-count-number-of-pairs-with-absolute-difference-k.cpp"
//#include "22_2_10-simplified-fractions.cpp"
//#include "22_2_11-minimum-difference-between-highest-and-lowest-of-k-scores.cpp"
//#include "22_1_31-number-of-steps-to-reduce-a-number-to-zero.cpp"
//#include "22_2_12-number-of-enclaves.cpp"
//#include "22_2_13-maximum-number-of-balloons.cpp"
//#include "22_2_14-single-element-in-a-sorted-array.cpp"
//#include "22_2_15-lucky-numbers-in-a-matrix.cpp"
#include "22_2_16-number-of-ways-to-reconstruct-a-tree.cpp"

//#include "21_11_27-random-flip-matrix.cpp"





int main(void) {
	//string input = "matrix = [[3,7,8],[9,11,13],[15,16,17]];";
	//Print<string>::VectorFormTrans(input);
	//cout << input << endl;


}


