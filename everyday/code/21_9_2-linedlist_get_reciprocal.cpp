#include "LinkList.h"

/*
输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。

例如，一个链表有 6 个节点，从头节点开始，它们的值依次是 1、2、3、4、5、6。这个链表的倒数第 3 个节点是值为 4 的节点。

示例：

给定一个链表: 1->2->3->4->5, 和 k = 2.

返回链表 4->5.


vector<int> nums = { 1, 2, 3, 4, 5 };
    LinkList *list_ptr = new LinkList();
    list_ptr->CreateLinkList(nums.size(), nums);
    Solution temp;
    ListNode *result = temp.getKthFromEnd(list_ptr->GetHead()->next, 2);
    LinkList::PrintLinkList(result);

*/

//class  Solution {
//public:
//    ListNode* getKthFromEnd(ListNode* head, int k) {
//        ListNode* p = head;
//        ListNode* result = head;
//        while (k--)
//            p = p->next;
//        while (p != NULL) {
//            p = p->next;
//            result = result->next;
//        }
//        return result;
//    }
//
//};
